.main_contents
  .management__main-contents
    .management__main-contents__tops
      .management__main-contents__tops__left
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 一日の目安 エネルギー量
            =icon("fas", "fire")
          .management__main-contents__top-data
            - if current_user.activity == 1 && current_user.gender == 1
              - target_calorie = (14.1 * current_user.weight + 620 * 1.5)
            - elsif current_user.activity == 1 && current_user.gender == 2
              - target_calorie = (10.8 * current_user.weight + 620 * 1.5)
            - elsif current_user.activity == 2 && current_user.gender == 1
              - target_calorie = (14.1 * current_user.weight + 620 * 1.75)
            - elsif current_user.activity == 2 && current_user.gender == 2
              - target_calorie = (10.8 * current_user.weight + 620 * 1.75)
            - elsif current_user.activity == 3 && current_user.gender == 1
              - target_calorie = (14.1 * current_user.weight + 620 * 2.0)
            - elsif current_user.activity == 3 && current_user.gender == 2
              - target_calorie = (10.8 * current_user.weight + 620 * 2.0)
            - else
              計算できません
            = target_calorie.round.to_s + " kcal"
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 一日の目安 糖質
            =icon("fas", "bread-slice")
          .management__main-contents__top-data
            - if current_user.activity == 1 && current_user.gender == 1
              - lower_target_carbohydrate = ((14.1 * current_user.weight + 620 * 1.5) / 4 * 0.5)
              - upper_target_carbohydrate = ((14.1 * current_user.weight + 620 * 1.5) / 4 * 0.65)
            - elsif current_user.activity == 1 && current_user.gender == 2
              - lower_target_carbohydrate = ((10.8 * current_user.weight + 620 * 1.5) / 4 * 0.5)
              - upper_target_carbohydrate = ((10.8 * current_user.weight + 620 * 1.5) / 4 * 0.65)
            - elsif current_user.activity == 2 && current_user.gender == 1
              - lower_target_carbohydrate = ((14.1 * current_user.weight + 620 * 1.75) / 4 * 0.5) 
              - upper_target_carbohydrate = ((14.1 * current_user.weight + 620 * 1.75) / 4 * 0.65)
            - elsif current_user.activity == 2 && current_user.gender == 2
              - lower_target_carbohydrate = ((10.8 * current_user.weight + 620 * 1.75) / 4 * 0.5)
              - upper_target_carbohydrate = ((10.8 * current_user.weight + 620 * 1.75) / 4 * 0.65)
            - elsif current_user.activity == 3 && current_user.gender == 1
              - lower_target_carbohydrate = ((14.1 * current_user.weight + 620 * 2.0) / 4 * 0.5)
              - upper_target_carbohydrate = ((14.1 * current_user.weight + 620 * 2.0) / 4 * 0.65)
            - elsif current_user.activity == 3 && current_user.gender == 2
              - lower_target_carbohydrate = ((10.8 * current_user.weight + 620 * 2.0) / 4 * 0.5)
              - upper_target_carbohydrate = ((10.8 * current_user.weight + 620 * 2.0) / 4 * 0.65)
            - else
              - lower_target_carbohydrate = 計算できません
            = lower_target_carbohydrate.round.to_s  + " g" + " 〜 " + upper_target_carbohydrate.round.to_s  + " g"
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 一日の目安 タンパク質
            =icon("fas", "fish")
          .management__main-contents__top-data
            - if current_user.activity == 1 && current_user.gender == 1
              - lower_target_protein = ((14.1 * current_user.weight + 620 * 1.5) / 4 * 0.13)
              - upper_target_protein = ((14.1 * current_user.weight + 620 * 1.5) / 4 * 0.2)
            - elsif current_user.activity == 1 && current_user.gender == 2
              - lower_target_protein = ((10.8 * current_user.weight + 620 * 1.5) / 4 * 0.13)
              - upper_target_protein = ((10.8 * current_user.weight + 620 * 1.5) / 4 * 0.2)
            - elsif current_user.activity == 2 && current_user.gender == 1
              - lower_target_protein = ((14.1 * current_user.weight + 620 * 1.75) / 4 * 0.13)
              - upper_target_protein = ((14.1 * current_user.weight + 620 * 1.75) / 4 * 0.2)
            - elsif current_user.activity == 2 && current_user.gender == 2
              - lower_target_protein = ((10.8 * current_user.weight + 620 * 1.75) / 4 * 0.13)
              - upper_target_protein = ((10.8 * current_user.weight + 620 * 1.75) / 4 * 0.2)
            - elsif current_user.activity == 3 && current_user.gender == 1
              - lower_target_protein = ((14.1 * current_user.weight + 620 * 2.0) / 4 * 0.13)
              - upper_target_protein = ((14.1 * current_user.weight + 620 * 2.0) / 4 * 0.2)
            - elsif current_user.activity == 3 && current_user.gender == 2
              - lower_target_protein = ((10.8 * current_user.weight + 620 * 2.0) / 4 * 0.13)
              - upper_target_protein = ((10.8 * current_user.weight + 620 * 2.0) / 4 * 0.2)
            - else
              計算できません
            = lower_target_protein.round.to_s  + " g" + " 〜 " + upper_target_protein.round.to_s  + " g"
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 一日の目安 脂質
            =icon("fas", "bacon")
          .management__main-contents__top-data
            - if current_user.activity == 1 && current_user.gender == 1
              - lower_target_fat = ((14.1 * current_user.weight + 620 * 1.5) / 9 * 0.2)
              - upper_target_fat = ((14.1 * current_user.weight + 620 * 1.5) / 9 * 0.3)
            - elsif current_user.activity == 1 && current_user.gender == 2
              - lower_target_fat = ((10.8 * current_user.weight + 620 * 1.5) / 9 * 0.2)
              - upper_target_fat = ((10.8 * current_user.weight + 620 * 1.5) / 9 * 0.3)
            - elsif current_user.activity == 2 && current_user.gender == 1
              - lower_target_fat = ((14.1 * current_user.weight + 620 * 1.75) / 9 * 0.2)
              - upper_target_fat = ((14.1 * current_user.weight + 620 * 1.75) / 9 * 0.3)
            - elsif current_user.activity == 2 && current_user.gender == 2
              - lower_target_fat = ((10.8 * current_user.weight + 620 * 1.75) / 9 * 0.2)
              - upper_target_fat = ((10.8 * current_user.weight + 620 * 1.75) / 9 * 0.3)
            - elsif current_user.activity == 3 && current_user.gender == 1
              - lower_target_fat = ((14.1 * current_user.weight + 620 * 2.0) / 9 * 0.2)
              - upper_target_fat = ((14.1 * current_user.weight + 620 * 2.0) / 9 * 0.3)
            - elsif current_user.activity == 3 && current_user.gender == 2
              - lower_target_fat = ((10.8 * current_user.weight + 620 * 2.0) / 9 * 0.2)
              - upper_target_fat = ((10.8 * current_user.weight + 620 * 2.0) / 9 * 0.3)
            - else
              - lower_target_fat = 計算できません
            = lower_target_fat.round.to_s  + " g" + " 〜 " + upper_target_fat.round.to_s  + " g"
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 一日の目安 食物繊維
            =icon("fas", "seedling")
          .management__main-contents__top-data
            %h1 20 g 以上
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 一日の目安 食塩相当量
            =icon("fas", "glass-whiskey")
          .management__main-contents__top-data
            %h1 8 g 未満
        .management__main-contents__top
          .management__main-contents__top-title
            %h1 適正体重
            =icon("fas", "weight")
          .management__main-contents__top-data
            = (current_user.height.to_f * current_user.height.to_f / 10000 *22).round(1).to_s + " kg"

      -# .management__main-contents__tops__right
      -#   .management__main-contents__top
      -#     .management__main-contents__top-title
      -#       %h1 今日の摂取 エネルギー量
      -#       =icon("fas", "fire")
      -#     -if @total_calorie.present?
      -#       .management__main-contents__top-judge
      -#         - if @total_calorie < target_calorie.round
      -#           .low 不足
      -#         - elsif @total_calorie == target_calorie.round
      -#           .proper 適度
      -#         -else @total_calorie > target_calorie.round
      -#           .over 過剰
      -#       .management__main-contents__top-data
      -#         = @total_calorie.round.to_s + ' kcal'
      -#   .management__main-contents__top
      -#     .management__main-contents__top-title
      -#       %h1 今日の摂取 糖質
      -#       =icon("fas", "bread-slice")
      -#     -if @total_carbohydrate.present?
      -#       .management__main-contents__top-judge
      -#         - if @total_carbohydrate < lower_target_carbohydrate.round
      -#           .low 不足
      -#         - elsif @total_carbohydrate > lower_target_carbohydrate.round && @total_carbohydrate < upper_target_carbohydrate.round
      -#           .proper 適度
      -#         -else @total_carbohydrate > upper_target_carbohydrate.round
      -#           .over 過剰
      -#       .management__main-contents__top-data
      -#         = @total_carbohydrate.round(1).to_s + ' g'
      -#   .management__main-contents__top
      -#     .management__main-contents__top-title
      -#       %h1 今日の摂取 タンパク質
      -#       =icon("fas", "fish")
      -#     - if @total_protein.present?
      -#       .management__main-contents__top-judge
      -#         - if @total_protein < lower_target_protein.round
      -#           .low 不足
      -#         - elsif @total_protein > lower_target_protein.round && @total_protein < upper_target_protein.round
      -#           .proper 適度
      -#         -else @total_protein > upper_target_protein.round
      -#           .over 過剰
      -#       .management__main-contents__top-data
      -#         = @total_protein.round(1).to_s + ' g'
      -#   .management__main-contents__top
      -#     .management__main-contents__top-title
      -#       %h1 今日の摂取 脂質
      -#       =icon("fas", "bacon")
      -#     - if @total_fat.present?
      -#       .management__main-contents__top-judge
      -#         - if @total_fat < lower_target_fat.round
      -#           .low 不足
      -#         - elsif @total_fat > lower_target_fat.round && @total_fat < upper_target_fat.round
      -#           .proper 適度
      -#         -else @total_fat > upper_target_fat.round
      -#           .over 過剰
      -#       .management__main-contents__top-data
      -#         = @total_fat.round(1).to_s + ' g'
      -#   .management__main-contents__top
      -#     .management__main-contents__top-title
      -#       %h1 今日の摂取 食物繊維
      -#       =icon("fas", "seedling")
      -#     - if @total_dietary_fiber.present?
      -#       .management__main-contents__top-judge
      -#         - if @total_dietary_fiber < 20
      -#           .low 不足
      -#         - elsif @total_dietary_fiber == 20
      -#           .proper 適度
      -#         -else @total_dietary_fiber > 20
      -#           .over 過剰
      -#       .management__main-contents__top-data
      -#         = @total_dietary_fiber.round(1).to_s + ' g'
      -#   .management__main-contents__top
      -#     .management__main-contents__top-title
      -#       %h1 今日の摂取 食塩相当量
      -#       =icon("fas", "glass-whiskey")
      -#     - if @total_salt_equivalent.present?
      -#       .management__main-contents__top-judge
      -#         - if @total_salt_equivalent < 8
      -#           .low 不足
      -#         - elsif @total_salt_equivalent == 8
      -#           .proper 適度
      -#         -else @total_salt_equivalent > 8
      -#           .over 過剰
      -#       .management__main-contents__top-data
      -#         = @total_salt_equivalent.round(1).to_s + ' g'
        -# .management__main-contents__top
        -#   .management__main-contents__top-title
        -#     %h1 現体重
        -#     =icon("fas", "weight")
        -#   .management__main-contents__top-judge

        -#   .management__main-contents__top-data
        -#     = current_user.weight.to_s + " kg"

    .management__main-contents__list
      %h1 記録表
      = link_to '新規登録', new_management_path, class: "btn"
      %br
      %table{ border: "1"}
        %thead
          %tr
            %th 表題
            %th 日付
            %th 食べた物
            %th カロリー
            %th 糖質
            %th タンパク質
            %th 脂質
            %th 食塩相当量
            %th 食物繊維
            %th{colspan: "2"}

        %tbody
          - @managements.each do |management|
            %tr
              %td= management.title
              %td= management.day
              - management.foods.each do |food|
                %td= food.name
                %td= food.calorie.to_s + ' (kcal)'
                %td= food.carbohydrate.to_s + ' (g)'
                %td= food.protein.to_s + ' (g)'
                %td= food.fat.to_s + ' (g)'
                %td= food.salt_equivalent.to_s + ' (g)'
                %td= food.dietary_fiber.to_s + ' (g)'
              %td
                = link_to '編集', edit_management_path(management), class: 't-btn'
                = link_to '削除', management, method: :delete, data: { confirm: '削除しますか?' }, class: 't-btn'
 
